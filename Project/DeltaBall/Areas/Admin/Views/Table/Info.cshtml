@model TableViewModel

<div class="card">
	<div class="card-body">
		<h5 class="card-title fw-semibold mb-4">@ViewData["Title"]</h5>
		<div class="card rounded mb-0">
			@if (Model.Items.Count > 0)
			{
				<table class="table table-hover mb-0">
					<thead>
						<tr class="table-primary">
							@{
								var item = Model.Items[0];
								var props = item.GetType().GetProperties();
								foreach (var prop in props)
								{
									if (prop.PropertyType == typeof(string)
									|| prop.PropertyType == typeof(int)
									|| prop.PropertyType == typeof(double)
									|| prop.PropertyType == typeof(bool)
									|| prop.PropertyType == typeof(DateTime))
									{
										string name = AttributeHelper.GetDisplayValue(prop);
										if (!name.Contains("Номер п/п"))
										{
											<th class="col">
												@name
											</th>
										}										
									}
								}
							}
							<th>
								<a asp-area="Admin" asp-controller="@item.GetType().Name" asp-action="Create" class="btn btn-success m-1">
									Добавить
								</a>
							</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var i in Model.Items)
						{
						<tr class="table-light">
								@{
									var fields = i
												.GetType()
												.GetProperties()
												.Where(x => x.PropertyType == typeof(string)
												|| (x.PropertyType == typeof(int)
												&& !AttributeHelper.GetDisplayValue(x).Contains("Номер"))
												|| x.PropertyType == typeof(double)
												|| x.PropertyType == typeof(bool)
												|| x.PropertyType == typeof(DateTime)).ToList();
									foreach (var field in fields)
									{
										var value = field.GetValue(i);
										if (!field.Name.Equals("Id"))
										{
											if (field.Name.Contains("Id"))
											{
												var stringClass = field.Name.Replace("Id", "");
												var stringNameSpace = "DeltaBall.Data.Models." ;
												var classNameExt = stringClass == "Scenario" || stringClass == "Type" || stringClass == "Status" ? "Game" + stringClass : stringClass;
												stringNameSpace += classNameExt;
												stringNameSpace = stringClass == "Range" ? "DeltaBall.Data.Models.ShootRange" : stringNameSpace;
												var className = Type.GetType(stringNameSpace);
												var fieldName = className.GetProperties().First(x => x.Name.Contains("Name"));
												var instance = i.GetType().GetProperty(stringClass).GetValue(i);
												<td>
													@fieldName.GetValue(instance)
												</td>
											} 
											else
											{
												<td>
													@value
												</td>
											}											
										}
									}
									}
								<td>
									<div class="d-flex flex-center">
										<a asp-area="Admin" asp-controller="@i.GetType().Name" asp-action="Edit" asp-route-id="@i.GetType().GetProperty("Id").GetValue(i)" class="btn btn-warning m-1 px-1">
											Редактировать
										</a>
										@if(i.GetType().Name != nameof(GameStatus))
										{
											<a asp-area="Admin" asp-controller="@i.GetType().Name" asp-action="Delete" asp-route-id="@i.GetType().GetProperty("Id").GetValue(i)" class="btn btn-danger m-1 px-1">
												Удалить
											</a>
										}										
									</div>
								</td>
							</tr>
						}								
					</tbody>
				</table>
			}
			else
			{
				<div class="alert alert-warning" role="alert">
					<h3>Данные не найдены!</h3>
					<hr />
					<p>Самое время добавить первый элемент! </p>
					<a asp-area="Admin" asp-controller="@Model.Type.Name" asp-action="Create" class="btn-sm btn-success m-1 p-1">
						Добавить
					</a>
				</div>

			}
		</div>
	</div>
</div>
