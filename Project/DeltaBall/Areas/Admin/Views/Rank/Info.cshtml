@model IEnumerable<Rank>

<div class="card">
	<div class="card-body">
		<h5 class="card-title fw-semibold mb-4">@ViewData["Title"]</h5>
		<div class="card rounded mb-0">
			@if (Model.Any())
			{
				<table class="table table-hover mb-0">
					<thead>
						<tr class="table-primary">
							@{
								var item = Model.First();
								var props = item.GetType().GetProperties();
								foreach (var prop in props)
								{
									if (prop.PropertyType == typeof(string)
									|| prop.PropertyType == typeof(int)
									|| prop.PropertyType == typeof(double)
									|| prop.PropertyType == typeof(bool)
									|| prop.PropertyType == typeof(DateTime))
									{
										string name = AttributeHelper.GetDisplayValue(prop);
										if (!name.Contains("Номер п/п"))
										{
											<th class="col">
												@name
											</th>
										}
									}
								}
							}
							<th>
							</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var i in Model)
						{
							<tr class="table-light">
								@{
									var fields = i
									.GetType()
									.GetProperties()
									.Where(x => x.PropertyType == typeof(string)
									|| (x.PropertyType == typeof(int)
									&& !AttributeHelper.GetDisplayValue(x).Contains("Номер"))
									|| x.PropertyType == typeof(double)
									|| x.PropertyType == typeof(bool)
									|| x.PropertyType == typeof(DateTime)).ToList();
									foreach (var field in fields)
									{
										var value = field.GetValue(i);
										if (!field.Name.Equals("Id"))
										{
											if (field.Name.Contains("Id"))
											{
												var stringClass = field.Name.Replace("Id", "");
												var stringNameSpace = "DeltaBall.Data.Models.";
												stringNameSpace += stringClass == "Scenario" ? "Game" + stringClass : stringClass;
												var className = Type.GetType(stringNameSpace);
												var fieldName = className.GetProperties().First(x => x.Name.Contains("Name"));
												var instance = i.GetType().GetProperty(stringClass).GetValue(i);
												<td>
													@fieldName.GetValue(instance)
												</td>
											}
											else if (field.Name.Contains("Path"))
											{
												<td>
													<img class="img-thumbnail p-3" width="150" height="150"
														 src="@Url.Action("GetRankImage", "Rank", new { id = i.GetType().GetProperties().First(x=>x.Name == "Id").GetValue(i) })" />
												</td>
												
											}
											else
											{
												<td>
													@value
												</td>
											}
										}
									}
								}
							</tr>
						}
					</tbody>
				</table>
			}
			else
			{
				<div class="alert alert-warning" role="alert">
					<h3>Нет данных об оконченых играх!</h3>
				</div>

			}
		</div>
	</div>
</div>


